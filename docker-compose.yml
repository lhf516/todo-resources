version: "3.9"

services:
  mongodb:
    image: mongo
    container_name: todo-mongodb
    ports:
      - ${MONGODB_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      TZ: Asia/Hong_Kong
    volumes:
      - ./init-db/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongodb/configdb:/data/configdb
      - ./mongodb/db:/data/db
    restart: "no"
  mongo-express:
    image: mongo-express
    container_name: todo-mongo-express
    ports:
      - ${MONGODB_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    restart: "no"
  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - ${ZOOKEEPER_PORT}:2181
  #   volumes:
  #     - zookeeper:/opt/zookeeper-3.4.13/data
  #     - zookeeper:/opt/zookeeper-3.4.13/conf
  #   restart: 'no'
  # kafka:
  #   image: wurstmeister/kafka:latest
  #   container_name: kafka
  #   ports:
  #     - ${KAFKA_PORT}:9092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_DELETE_TOPIC_ENABLE: 'true'
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     #KAFKA_CREATE_TOPICS: 'topic-test:1:1'
  #     # KAFKA_LISTENERS: 'INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092'
  #     # KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
  #     # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
  #     # KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
  #     # KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
  #     # KAFKA_RESTART_ATTEMPTS: '10'
  #     # KAFKA_RESTART_DELAY: '5'
  #     # ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_MESSAGE_MAX_BYTES: 2000000
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # - kafka:/kafka/kafka-logs-1
  #     - kafka:/kafka
  #   depends_on:
  #     - zookeeper
  #   restart: 'no'
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   ports:
  #     - ${KAFKAUI_PORT}:8080
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #     DYNAMIC_CONFIG_ENABLED: 'true'
  #   restart: 'no'
networks:
  default:
    name: todo-sample
    external: true
# volumes:
  # mongodb_configdb:
  # mongodb_db:
  # zookeeper:
  # kafka:
  # kafkaui: